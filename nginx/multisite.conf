upstream wpupstream {
	server ${WP_HOST} weight=1 max_fails=1 fail_timeout=10;

	keepalive 30;
}

fastcgi_keep_conn on;

# FastCGI cache
fastcgi_cache_path /ncache levels=1:2 keys_zone=WP_CACHE:100m inactive=60m;
fastcgi_cache_key "$scheme$request_method$host$request_uri";
fastcgi_cache_use_stale error timeout invalid_header http_500;
fastcgi_ignore_headers Cache-Control Expires Set-Cookie;

# Browser caching
map $sent_http_content_type $expires {
    default                    off;
    text/html                  epoch;
    text/css                   max;
    application/javascript     max;
    ~image/                    max;
}

server {
    include /etc/nginx/extras/gzip.conf;
    include /etc/nginx/extras/headers.conf;

    expires $expires;

    root /var/www/html;

    index index.php index.html index.htm index.nginx-debian.html;

    # FastCGI cache
    set $skip_cache 0;

	# FastCGI cache: URLs with query strings should always go to PHP
	if ($query_string != "") {
		set $skip_cache 1;
	}

	# FastCGI cache: Don't cache URIs containing the following segments
	if ($request_uri ~* "/wp-admin/|/xmlrpc.php|wp-.*.php|/feed/|index.php|sitemap(_index)?.xml") {
		set $skip_cache 1;
	}

	# FastCGI cache: Don't use the cache for logged in users or recent commenters
	if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
		set $skip_cache 1;
	}

    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    #
    # MULTISITE
    #

    # Add trailing slash to */wp-admin requests.
    rewrite /wp-admin$ $scheme://$host$uri/ permanent;

    # Pass uploaded files to wp-includes/ms-files.php.
    rewrite /files/$ /index.php last;

    if ($uri !~ wp-content/plugins) {
        rewrite /files/(.+)$ /wp-includes/ms-files.php?file=$1 last;
    }

    # Rewrite multisite '.../wp-.*' and '.../*.php'.
    if (!-e $request_filename) {
        rewrite ^/[_0-9a-zA-Z-]+(/wp-.*) $1 last;
        rewrite ^/[_0-9a-zA-Z-]+.*(/wp-admin/.*\.php)$ $1 last;
        rewrite ^/[_0-9a-zA-Z-]+(/.*\.php)$ $1 last;
    }

    #
    # END MULTISITE
    #

    include /etc/nginx/locations/*.conf;

    location = /robots.txt {
        try_files $uri $uri/ /index.php?$args;
        access_log off;
        log_not_found off;
    }

    location = /favicon.ico {
        access_log off;
        log_not_found off;
    }

    location ~ /\.ht {
        deny all;
    }

    # Browser caching: Separate block for font files
    location ~* \.(?:eot|woff|woff2|ttf|otf) {
        access_log        off;
        log_not_found     off;
        expires           max;

        types {application/vnd.ms-fontobject eot;}
        types {application/font-woff woff;}
        types {font/x-woff woff2;}
        types {font/truetype ttf;}
        types {font/opentype otf;}
    }

    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass wpupstream;
        fastcgi_index index.php;
        fastcgi_read_timeout 600;

        include /etc/nginx/fastcgi_params;

        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;

        # FastCGI cache
        fastcgi_cache_bypass $skip_cache;
		fastcgi_no_cache $skip_cache;
        fastcgi_cache WP_CACHE; # The name of the cache keys_zone
        fastcgi_cache_valid 200 60m; # What to cache: Code 200 responses, for 60 minutes
        fastcgi_cache_methods GET HEAD; # What to cache: only GET and HEAD requests
    }
}
